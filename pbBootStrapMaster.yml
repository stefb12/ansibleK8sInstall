---
- hosts: master
  # gather_facts: yes
  #become_user: root
  become_method: sudo

  vars_files:
    - "vars/params.yml"

  tasks:

    # - name: Remove swapfile from /etc/fstab
    #   mount:
    #     name: "{{ item }}"
    #     fstype: swap
    #     state: absent
    #   with_items:
    #     - swap
    #     - none
    #
    # - name: Disable swap
    #   command: swapoff -a
    #   when: ansible_swaptotal_mb > 0

    - name: Initialize the cluster
      become: true
      shell: |
        ip=$(ip -f inet addr show {{ k8sApiIf }} | awk '/inet / {print $2}' | awk -F/ '{print $1}')
        kubeadm init --pod-network-cidr={{ podNetworkCidr }} --apiserver-advertise-address $ip
      ignore_errors: no
      tags:
        - kubeadm

    - name: Setup the kube config file for {{ dockerUser }}
      become: true
      command: "{{ item }}"
      ignore_errors: no
      tags:
        - kubeadm
      with_items:
        - mkdir -p /home/{{ dockerUser }}/.kube
        - cp -i /etc/kubernetes/admin.conf /home/{{ dockerUser }}/.kube/config
        - chown {{ dockerUser }}:{{ dockerUser }} /home/{{ dockerUser }}/.kube/config

    - name: Install Networking Provider // Flannel
      command: "{{ item }}"
      ignore_errors: no
      tags:
        - kubectl
      with_items:
        - kubectl apply -f {{ cniFlannelUrl }}
      when:
        - cni == "flannel"

    - name: Install Networking Provider  // Calico
      command: "{{ item }}"
      ignore_errors: no
      tags:
        - kubectl
      with_items:
        - kubectl apply -f {{ cniCalicoUrl }}
      when:
        - cni == "calico"

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
